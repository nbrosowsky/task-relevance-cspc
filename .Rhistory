install.packages("yaml")
devtools::install_github("crsh/papaja")
# options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache = FALSE)
library("dplyr")
library("afex")
library("papaja")
load(raw_data.Rda)
load("raw_data.Rda")
load("data-analysis/raw_data.Rda")
vjoutNR <- function(x,n) {
xm <- mean(x)
xsize <- c(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20,
25, 30, 35, 50, 80)
stds <- c(1.3, 1.458, 1.68, 1.841, 1.961, 2.05, 2.12, 2.173,
2.22, 2.246, 2.274, 2.31, 2.326, 2.391, 2.41, 2.4305,
2.45, 2.48, 2.5)
stdindex <- length(xsize[xsize <= length(x)])
removed <- x[x < xm+sd(x)*stds[stdindex]]
removed <- removed[removed > xm - (sd(x)*stds[stdindex])]
proportionRemoved <- length(removed)/length(x)
finaldata<-c(mean(removed),1-proportionRemoved)
return(finaldata[[n]])
}
labelDataset <- function(data) {
correctLabel <- function(x) {
if(!is.null(attributes(x)$labels)) {
class(attributes(x)$labels) <- typeof(x)
}
return(x)
}
for(i in colnames(data)) {
data[, i] <- correctLabel(data[, i])
}
return(data)
}
# Find subs with < 75% accuracy
low_acc <- raw_data %>%
group_by(Subject,Exp,countProp,trialProp,trialCongruency) %>%
summarise(meanAccuracy = mean(ACC)) %>%
filter(meanAccuracy < .75) %>%
.$Subject
N_subjects_removed<-length(unique(low_acc))
## Summarize by subject
RT.DF <- raw_data %>%
filter(
RT < 3000,
RT > 0,
ACC == TRUE,
Subject%in%low_acc == FALSE
) %>%
group_by(Exp,Subject,order,block,trialProp,countProp,trialCongruency)%>%
summarize(vjoutRT = vjoutNR(RT,1))
## Find percentage of trials removed
percent_removed <- raw_data %>%
filter(
RT < 3000,
RT > 0,
ACC == TRUE,
Subject%in%low_acc == FALSE
) %>%
group_by(Exp,Subject,order,block,trialProp,countProp,trialCongruency)%>%
summarize(percent_removed = vjoutNR(RT,2)) %>%
ungroup() %>%
summarize(avg_removed = mean(percent_removed)) %>%
.$avg_removed
## Analyze RTs for frequency unbiased items
RT.Analysis <- RT.DF %>%
filter(
trialProp == "unbiased"
) %>%
group_by(Exp,Subject,countProp,trialCongruency) %>%
summarize(meanRT = mean(vjoutRT))
RT_ANOVA<-  aov_car(meanRT ~ Exp*countProp*trialCongruency + Error(Subject/countProp*trialCongruency), data = RT.Analysis)
RT_ANOVA <- apa_print(RT_ANOVA, es = "pes")$statistic
## Analyze ACC for frequency unbiased items
ACC.analysis <- raw_data %>%
mutate(error = (1-ACC)*100) %>%
filter(
trialProp == "unbiased",
Subject%in%low_acc == FALSE)  %>%
group_by(Subject,Exp,countProp,trialCongruency) %>%
summarise(error = mean(error))
ACC_ANOVA <- aov_car(error ~ Exp*countProp*trialCongruency + Error(Subject/countProp*trialCongruency), data = ACC.analysis)
ACC_ANOVA <- apa_print(ACC_ANOVA, es = "pes")$statistic
#clean up
#rm(list=c("ACC.analysis","aov.out","raw_data","RT.Analysis","RT.DF","low_acc","vjoutNR"))
# options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(message=FALSE,warning=FALSE, cache = FALSE)
library("dplyr")
library("afex")
library("papaja")
load("data-analysis/raw_data.Rda")
vjoutNR <- function(x,n) {
xm <- mean(x)
xsize <- c(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20,
25, 30, 35, 50, 80)
stds <- c(1.3, 1.458, 1.68, 1.841, 1.961, 2.05, 2.12, 2.173,
2.22, 2.246, 2.274, 2.31, 2.326, 2.391, 2.41, 2.4305,
2.45, 2.48, 2.5)
stdindex <- length(xsize[xsize <= length(x)])
removed <- x[x < xm+sd(x)*stds[stdindex]]
removed <- removed[removed > xm - (sd(x)*stds[stdindex])]
proportionRemoved <- length(removed)/length(x)
finaldata<-c(mean(removed),1-proportionRemoved)
return(finaldata[[n]])
}
labelDataset <- function(data) {
correctLabel <- function(x) {
if(!is.null(attributes(x)$labels)) {
class(attributes(x)$labels) <- typeof(x)
}
return(x)
}
for(i in colnames(data)) {
data[, i] <- correctLabel(data[, i])
}
return(data)
}
# Find subs with < 75% accuracy
low_acc <- raw_data %>%
group_by(Subject,Exp,countProp,trialProp,trialCongruency) %>%
summarise(meanAccuracy = mean(ACC)) %>%
filter(meanAccuracy < .75) %>%
.$Subject
N_subjects_removed<-length(unique(low_acc))
## Summarize by subject
RT.DF <- raw_data %>%
filter(
RT < 3000,
RT > 0,
ACC == TRUE,
Subject%in%low_acc == FALSE
) %>%
group_by(Exp,Subject,order,block,trialProp,countProp,trialCongruency)%>%
summarize(vjoutRT = vjoutNR(RT,1))
## Find percentage of trials removed
percent_removed <- raw_data %>%
filter(
RT < 3000,
RT > 0,
ACC == TRUE,
Subject%in%low_acc == FALSE
) %>%
group_by(Exp,Subject,order,block,trialProp,countProp,trialCongruency)%>%
summarize(percent_removed = vjoutNR(RT,2)) %>%
ungroup() %>%
summarize(avg_removed = mean(percent_removed)) %>%
.$avg_removed
## Analyze RTs for frequency unbiased items
RT.Analysis <- RT.DF %>%
filter(
trialProp == "unbiased"
) %>%
group_by(Exp,Subject,countProp,trialCongruency) %>%
summarize(meanRT = mean(vjoutRT))
RT_ANOVA<-  aov_car(meanRT ~ Exp*countProp*trialCongruency + Error(Subject/countProp*trialCongruency), data = RT.Analysis)
RT_ANOVA <- apa_print(RT_ANOVA, es = "pes")$statistic
## Analyze ACC for frequency unbiased items
ACC.analysis <- raw_data %>%
mutate(error = (1-ACC)*100) %>%
filter(
trialProp == "unbiased",
Subject%in%low_acc == FALSE)  %>%
group_by(Subject,Exp,countProp,trialCongruency) %>%
summarise(error = mean(error))
ACC_ANOVA <- aov_car(error ~ Exp*countProp*trialCongruency + Error(Subject/countProp*trialCongruency), data = ACC.analysis)
ACC_ANOVA <- apa_print(ACC_ANOVA, es = "pes")$statistic
#clean up
#rm(list=c("ACC.analysis","aov.out","raw_data","RT.Analysis","RT.DF","low_acc","vjoutNR"))
apa_print(ACC_ANOVA, es = "pes")$
apa_print(ACC_ANOVA, es = "pes")
ACC_ANOVA <- aov_car(error ~ Exp*countProp*trialCongruency + Error(Subject/countProp*trialCongruency), data = ACC.analysis)
ACC_ANOVA <- apa_print(ACC_ANOVA, es = "pes")
