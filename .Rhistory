vjoutNR <- function(x,n) {
xm <- mean(x)
xsize <- c(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20,
25, 30, 35, 50, 80)
stds <- c(1.3, 1.458, 1.68, 1.841, 1.961, 2.05, 2.12, 2.173,
2.22, 2.246, 2.274, 2.31, 2.326, 2.391, 2.41, 2.4305,
2.45, 2.48, 2.5)
stdindex <- length(xsize[xsize <= length(x)])
removed <- x[x < xm+sd(x)*stds[stdindex]]
removed <- removed[removed > xm - (sd(x)*stds[stdindex])]
proportionRemoved <- length(removed)/length(x)
finaldata<-c(mean(removed),1-proportionRemoved)
return(finaldata[[n]])
}
## manuscript.Rmd is called from parent
if(folderName() == "data-analysis"){load("raw_data.Rda")} else {load("data-analysis/raw_data.Rda")}
# Find subs with < 75% accuracy
low_acc <- raw_data %>%
group_by(Subject,Condition,Task_Relevant_Context,Frequency,Congruency) %>%
summarise(meanAccuracy = mean(ACC)) %>%
filter(meanAccuracy < .75) %>%
.$Subject
########## Create table
## summarise by subject
RT.DF <- raw_data %>%
filter(
RT < 3000,
RT > 0,
ACC == TRUE,
Subject%in%low_acc == FALSE
) %>%
group_by(Condition,Subject,Frequency,Order,Phase,Block,Frequency,Task_Relevant_Context,Congruency)%>%
summarise(vjoutRT = vjoutNR(RT,1)) %>%
group_by(Condition,Subject,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(meanRT = mean(vjoutRT)) %>%
group_by(Condition,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(N = n_distinct(Subject),
RT = mean(meanRT),
std = sd(meanRT),
se = std/sqrt(N))
RT.DF$PC <- NA
RT.DF[RT.DF$Frequency == "unbiased",]$PC <- "50%"
RT.DF[RT.DF$Frequency == "biased" & RT.DF$Congruency == "inc",]$PC <- "0%"
RT.DF[RT.DF$Frequency == "biased" & RT.DF$Congruency == "con",]$PC <- "100%"
names(RT.DF)[names(RT.DF)=="RT"]<-"oldRT"
RT.DF$PC<-as.factor(RT.DF$PC)
RT.table <- RT.DF %>%
mutate(RT = paste(as.character(round(oldRT))," (", as.character(round(se)), ")", sep="")) %>%
ungroup() %>%
select(Condition,PC,Task_Relevant_Context,Congruency,RT)
## summarise by subject
ACC.DF <- raw_data %>%
filter(
Subject%in%low_acc == FALSE
) %>%
group_by(Condition,Subject,Frequency,Order,Phase,Block,Frequency,Task_Relevant_Context,Congruency)%>%
summarise(ER = (1-mean(ACC))*100)  %>%
group_by(Condition,Subject,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(meanER = mean(ER)) %>%
group_by(Condition,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(N = n_distinct(Subject),
ER = mean(meanER),
std = sd(meanER),
se = std/sqrt(N))
ACC.DF$PC <- NA
ACC.DF[ACC.DF$Frequency == "unbiased",]$PC <- "50%"
ACC.DF[ACC.DF$Frequency == "biased" & ACC.DF$Congruency == "inc",]$PC <- "0%"
ACC.DF[ACC.DF$Frequency == "biased" & ACC.DF$Congruency == "con",]$PC <- "100%"
names(ACC.DF)[names(ACC.DF)=="ER"]<-"oldER"
ACC.DF$PC<-as.factor(ACC.DF$PC)
ACC.table <- ACC.DF %>%
mutate(ER = paste(as.character(round(oldER,digits=2))," (", as.character(round(se, digits=2)), ")", sep="")) %>%
ungroup() %>%
select(Condition,PC,Task_Relevant_Context,Congruency,ER)
table<-merge(RT.table,ACC.table)
names(table)[names(table)=="Task_Relevant_Context"]<-"Task Relevant Context"
levels(table$`Task Relevant Context`)<-c("Task Relevant Context: 100% PC", "Task Relevant Context: 0% PC")
levels(table$Condition)<-c("Object","Social","Social (NR)")
table$PC <- factor(table$PC, levels = c("0%", "50%", "100%"))
## need to reshape because kable cannot do nested tables automatically
t100<-(table[table$`Task Relevant Context` == "Task Relevant Context: 100% PC",])
t100<-t100[,-3]
t100<-rbind(t100,
c("Object","0%","con","-","-","-","-"),
c("Social","0%","con","-","-","-","-"),
c("Social (NR)","0%","con","-","-","-","-"),
c("Object","100%","inc","-","-","-","-"),
c("Social","100%","inc","-","-","-","-"),
c("Social (NR)","100%","inc","-","-","-","-")
)
t100<-cbind(
t100[t100$Congruency == "con",] %>%
arrange(Condition,PC),
t100[t100$Congruency == "inc",] %>%
arrange(Condition,PC))
t100<-t100[c(1,2,4,5,9,10)]
colnames(t100)<-c("Condition","PC","RT","ER","RT","ER")
t0<-cbind(table[table$`Task Relevant Context` == "Task Relevant Context: 0% PC",])
t0<-t0[,-3]
t0<-rbind(t0,
c("Object","0%","con","-","-","-","-"),
c("Social","0%","con","-","-","-","-"),
c("Social (NR)","0%","con","-","-","-","-"),
c("Object","100%","inc","-","-","-","-"),
c("Social","100%","inc","-","-","-","-"),
c("Social (NR)","100%","inc","-","-","-","-")
)
t0<-cbind(
t0[t0$Congruency == "con",] %>%
arrange(Condition,PC),
t0[t0$Congruency == "inc",] %>%
arrange(Condition,PC))
t0<-t0[,c(1,2,4,5,9,10)]
colnames(t0)<-c("Condition","PC","RT","ER","RT","ER")
table<-rbind(t100,t0)
#colnames(table)<-c("Condition","PC","RT","ER","RT","ER")
table$TRC<-as.factor(c(rep("Task Relevant Context: 100% PC", 9), rep("Task Relevant Context: 0% PC", 9)))
table<-table[c(7,1:6)]
#colnames(table)<-c("Condition","PC","RT","ER","RT","ER")
latexTable1<-kable(table,"latex", booktabs = T, row.names = F, align = "c", linesep = '') %>%
kable_styling(full_width = T, font_size= 7) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses.") %>%
kable_styling(latex_options = c("scale_down"))
kable_as_image(latexTable1,filename="table1",file_format ="png", density = 300)
source('~/GitHub/task-relevance-cspc/data-analysis/table1.R', echo=TRUE)
library(dplyr)
library(tidyr)
library(afex)
library(ggplot2)
library(cowplot)
#library(tables)
library(magrittr)
library(kableExtra)
#As of 2018/12/07 apa_print() requires development version of Papaja
#devtools::install_github("crsh/papaja")
library(papaja)
folderName <- function(){
wd<-getwd()
wd<-strsplit(wd,"/")
wd<-wd[[1]][length(wd[[1]])]
return(wd)
}
vjoutNR <- function(x,n) {
xm <- mean(x)
xsize <- c(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20,
25, 30, 35, 50, 80)
stds <- c(1.3, 1.458, 1.68, 1.841, 1.961, 2.05, 2.12, 2.173,
2.22, 2.246, 2.274, 2.31, 2.326, 2.391, 2.41, 2.4305,
2.45, 2.48, 2.5)
stdindex <- length(xsize[xsize <= length(x)])
removed <- x[x < xm+sd(x)*stds[stdindex]]
removed <- removed[removed > xm - (sd(x)*stds[stdindex])]
proportionRemoved <- length(removed)/length(x)
finaldata<-c(mean(removed),1-proportionRemoved)
return(finaldata[[n]])
}
## manuscript.Rmd is called from parent
if(folderName() == "data-analysis"){load("raw_data.Rda")} else {load("data-analysis/raw_data.Rda")}
# Find subs with < 75% accuracy
low_acc <- raw_data %>%
group_by(Subject,Condition,Task_Relevant_Context,Frequency,Congruency) %>%
summarise(meanAccuracy = mean(ACC)) %>%
filter(meanAccuracy < .75) %>%
.$Subject
########## Create table
## summarise by subject
RT.DF <- raw_data %>%
filter(
RT < 3000,
RT > 0,
ACC == TRUE,
Subject%in%low_acc == FALSE
) %>%
group_by(Condition,Subject,Frequency,Order,Phase,Block,Frequency,Task_Relevant_Context,Congruency)%>%
summarise(vjoutRT = vjoutNR(RT,1)) %>%
group_by(Condition,Subject,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(meanRT = mean(vjoutRT)) %>%
group_by(Condition,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(N = n_distinct(Subject),
RT = mean(meanRT),
std = sd(meanRT),
se = std/sqrt(N))
RT.DF$PC <- NA
RT.DF[RT.DF$Frequency == "unbiased",]$PC <- "50%"
RT.DF[RT.DF$Frequency == "biased" & RT.DF$Congruency == "inc",]$PC <- "0%"
RT.DF[RT.DF$Frequency == "biased" & RT.DF$Congruency == "con",]$PC <- "100%"
names(RT.DF)[names(RT.DF)=="RT"]<-"oldRT"
RT.DF$PC<-as.factor(RT.DF$PC)
RT.table <- RT.DF %>%
mutate(RT = paste(as.character(round(oldRT))," (", as.character(round(se)), ")", sep="")) %>%
ungroup() %>%
select(Condition,PC,Task_Relevant_Context,Congruency,RT)
## summarise by subject
ACC.DF <- raw_data %>%
filter(
Subject%in%low_acc == FALSE
) %>%
group_by(Condition,Subject,Frequency,Order,Phase,Block,Frequency,Task_Relevant_Context,Congruency)%>%
summarise(ER = (1-mean(ACC))*100)  %>%
group_by(Condition,Subject,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(meanER = mean(ER)) %>%
group_by(Condition,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(N = n_distinct(Subject),
ER = mean(meanER),
std = sd(meanER),
se = std/sqrt(N))
ACC.DF$PC <- NA
ACC.DF[ACC.DF$Frequency == "unbiased",]$PC <- "50%"
ACC.DF[ACC.DF$Frequency == "biased" & ACC.DF$Congruency == "inc",]$PC <- "0%"
ACC.DF[ACC.DF$Frequency == "biased" & ACC.DF$Congruency == "con",]$PC <- "100%"
names(ACC.DF)[names(ACC.DF)=="ER"]<-"oldER"
ACC.DF$PC<-as.factor(ACC.DF$PC)
ACC.table <- ACC.DF %>%
mutate(ER = paste(as.character(round(oldER,digits=2))," (", as.character(round(se, digits=2)), ")", sep="")) %>%
ungroup() %>%
select(Condition,PC,Task_Relevant_Context,Congruency,ER)
table<-merge(RT.table,ACC.table)
names(table)[names(table)=="Task_Relevant_Context"]<-"Task Relevant Context"
levels(table$`Task Relevant Context`)<-c("Task Relevant Context: 100% PC", "Task Relevant Context: 0% PC")
levels(table$Condition)<-c("Object","Social","Social (NR)")
table$PC <- factor(table$PC, levels = c("0%", "50%", "100%"))
## need to reshape because kable cannot do nested tables automatically
t100<-(table[table$`Task Relevant Context` == "Task Relevant Context: 100% PC",])
t100<-t100[,-3]
t100<-rbind(t100,
c("Object","0%","con","-","-","-","-"),
c("Social","0%","con","-","-","-","-"),
c("Social (NR)","0%","con","-","-","-","-"),
c("Object","100%","inc","-","-","-","-"),
c("Social","100%","inc","-","-","-","-"),
c("Social (NR)","100%","inc","-","-","-","-")
)
t100<-cbind(
t100[t100$Congruency == "con",] %>%
arrange(Condition,PC),
t100[t100$Congruency == "inc",] %>%
arrange(Condition,PC))
t100<-t100[c(1,2,4,5,9,10)]
colnames(t100)<-c("Condition","PC","RT","ER","RT","ER")
t0<-cbind(table[table$`Task Relevant Context` == "Task Relevant Context: 0% PC",])
t0<-t0[,-3]
t0<-rbind(t0,
c("Object","0%","con","-","-","-","-"),
c("Social","0%","con","-","-","-","-"),
c("Social (NR)","0%","con","-","-","-","-"),
c("Object","100%","inc","-","-","-","-"),
c("Social","100%","inc","-","-","-","-"),
c("Social (NR)","100%","inc","-","-","-","-")
)
t0<-cbind(
t0[t0$Congruency == "con",] %>%
arrange(Condition,PC),
t0[t0$Congruency == "inc",] %>%
arrange(Condition,PC))
t0<-t0[,c(1,2,4,5,9,10)]
colnames(t0)<-c("Condition","PC","RT","ER","RT","ER")
table<-rbind(t100,t0)
colnames(table)<-c("Condition","PC","RT","ER","RT","ER")
table$TRC<-as.factor(c(rep("100% PC", 9), rep("0% PC", 9)))
table<-table[c(7,1:6)]
colnames(table)<-c("Task-Relevant Context","Condition","PC","RT","ER","RT","ER")
latexTable1<-kable(table,"latex", booktabs = T, row.names = F, align = "c", linesep = '') %>%
kable_styling(full_width = F, font_size= 7) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses.") %>%
kable_styling(latex_options = c("scale_down"))
kable_as_image(latexTable1,filename="table1",file_format ="png", density = 300)
#<-kable(table,"latex", booktabs = T, row.names = F) %>%
#  kable_styling(full_width = T, font_size= 7) %>%
#  add_header_above(c(" "," ",
#                     "Congruent" = 2, "Incongruent" = 2,
#                     "Congruent" = 2, "Incongruent" = 2), bold = T, align="c")  %>%
#  add_header_above(c(" ", " ", "Task-Relevant Context: 100% PC"=4,"Task-Relevant Context: 0% PC" = 4), bold = T, align="c")  %>%
#  row_spec(0, bold = T, align="c") %>%
#  collapse_rows(columns = 1, latex_hline = "major") %>%
#  footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses.") %>%
#  kable_styling(latex_options = c("scale_down"))
kable_as_image(kable(table,"latex", booktabs = T, row.names = F, align = "c", linesep = '') %>%
kable_styling(full_width = F, font_size= 7) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses."),filename="table1",file_format ="png", density = 300)
library(dplyr)
library(tidyr)
library(afex)
library(ggplot2)
library(cowplot)
#library(tables)
library(magrittr)
library(kableExtra)
#As of 2018/12/07 apa_print() requires development version of Papaja
#devtools::install_github("crsh/papaja")
library(papaja)
folderName <- function(){
wd<-getwd()
wd<-strsplit(wd,"/")
wd<-wd[[1]][length(wd[[1]])]
return(wd)
}
vjoutNR <- function(x,n) {
xm <- mean(x)
xsize <- c(3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 20,
25, 30, 35, 50, 80)
stds <- c(1.3, 1.458, 1.68, 1.841, 1.961, 2.05, 2.12, 2.173,
2.22, 2.246, 2.274, 2.31, 2.326, 2.391, 2.41, 2.4305,
2.45, 2.48, 2.5)
stdindex <- length(xsize[xsize <= length(x)])
removed <- x[x < xm+sd(x)*stds[stdindex]]
removed <- removed[removed > xm - (sd(x)*stds[stdindex])]
proportionRemoved <- length(removed)/length(x)
finaldata<-c(mean(removed),1-proportionRemoved)
return(finaldata[[n]])
}
## manuscript.Rmd is called from parent
if(folderName() == "data-analysis"){load("raw_data.Rda")} else {load("data-analysis/raw_data.Rda")}
# Find subs with < 75% accuracy
low_acc <- raw_data %>%
group_by(Subject,Condition,Task_Relevant_Context,Frequency,Congruency) %>%
summarise(meanAccuracy = mean(ACC)) %>%
filter(meanAccuracy < .75) %>%
.$Subject
########## Create table
## summarise by subject
RT.DF <- raw_data %>%
filter(
RT < 3000,
RT > 0,
ACC == TRUE,
Subject%in%low_acc == FALSE
) %>%
group_by(Condition,Subject,Frequency,Order,Phase,Block,Frequency,Task_Relevant_Context,Congruency)%>%
summarise(vjoutRT = vjoutNR(RT,1)) %>%
group_by(Condition,Subject,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(meanRT = mean(vjoutRT)) %>%
group_by(Condition,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(N = n_distinct(Subject),
RT = mean(meanRT),
std = sd(meanRT),
se = std/sqrt(N))
RT.DF$PC <- NA
RT.DF[RT.DF$Frequency == "unbiased",]$PC <- "50%"
RT.DF[RT.DF$Frequency == "biased" & RT.DF$Congruency == "inc",]$PC <- "0%"
RT.DF[RT.DF$Frequency == "biased" & RT.DF$Congruency == "con",]$PC <- "100%"
names(RT.DF)[names(RT.DF)=="RT"]<-"oldRT"
RT.DF$PC<-as.factor(RT.DF$PC)
RT.table <- RT.DF %>%
mutate(RT = paste(as.character(round(oldRT))," (", as.character(round(se)), ")", sep="")) %>%
ungroup() %>%
select(Condition,PC,Task_Relevant_Context,Congruency,RT)
## summarise by subject
ACC.DF <- raw_data %>%
filter(
Subject%in%low_acc == FALSE
) %>%
group_by(Condition,Subject,Frequency,Order,Phase,Block,Frequency,Task_Relevant_Context,Congruency)%>%
summarise(ER = (1-mean(ACC))*100)  %>%
group_by(Condition,Subject,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(meanER = mean(ER)) %>%
group_by(Condition,Frequency,Task_Relevant_Context,Congruency) %>%
summarise(N = n_distinct(Subject),
ER = mean(meanER),
std = sd(meanER),
se = std/sqrt(N))
ACC.DF$PC <- NA
ACC.DF[ACC.DF$Frequency == "unbiased",]$PC <- "50%"
ACC.DF[ACC.DF$Frequency == "biased" & ACC.DF$Congruency == "inc",]$PC <- "0%"
ACC.DF[ACC.DF$Frequency == "biased" & ACC.DF$Congruency == "con",]$PC <- "100%"
names(ACC.DF)[names(ACC.DF)=="ER"]<-"oldER"
ACC.DF$PC<-as.factor(ACC.DF$PC)
ACC.table <- ACC.DF %>%
mutate(ER = paste(as.character(round(oldER,digits=2))," (", as.character(round(se, digits=2)), ")", sep="")) %>%
ungroup() %>%
select(Condition,PC,Task_Relevant_Context,Congruency,ER)
table<-merge(RT.table,ACC.table)
names(table)[names(table)=="Task_Relevant_Context"]<-"Task Relevant Context"
levels(table$`Task Relevant Context`)<-c("Task Relevant Context: 100% PC", "Task Relevant Context: 0% PC")
levels(table$Condition)<-c("Object","Social","Social (NR)")
table$PC <- factor(table$PC, levels = c("0%", "50%", "100%"))
## need to reshape because kable cannot do nested tables automatically
t100<-(table[table$`Task Relevant Context` == "Task Relevant Context: 100% PC",])
t100<-t100[,-3]
t100<-rbind(t100,
c("Object","0%","con","-","-","-","-"),
c("Social","0%","con","-","-","-","-"),
c("Social (NR)","0%","con","-","-","-","-"),
c("Object","100%","inc","-","-","-","-"),
c("Social","100%","inc","-","-","-","-"),
c("Social (NR)","100%","inc","-","-","-","-")
)
t100<-cbind(
t100[t100$Congruency == "con",] %>%
arrange(Condition,PC),
t100[t100$Congruency == "inc",] %>%
arrange(Condition,PC))
t100<-t100[c(1,2,4,5,9,10)]
colnames(t100)<-c("Condition","PC","RT","ER","RT","ER")
t0<-cbind(table[table$`Task Relevant Context` == "Task Relevant Context: 0% PC",])
t0<-t0[,-3]
t0<-rbind(t0,
c("Object","0%","con","-","-","-","-"),
c("Social","0%","con","-","-","-","-"),
c("Social (NR)","0%","con","-","-","-","-"),
c("Object","100%","inc","-","-","-","-"),
c("Social","100%","inc","-","-","-","-"),
c("Social (NR)","100%","inc","-","-","-","-")
)
t0<-cbind(
t0[t0$Congruency == "con",] %>%
arrange(Condition,PC),
t0[t0$Congruency == "inc",] %>%
arrange(Condition,PC))
t0<-t0[,c(1,2,4,5,9,10)]
colnames(t0)<-c("Condition","PC","RT","ER","RT","ER")
table<-rbind(t100,t0)
colnames(table)<-c("Condition","PC","RT","ER","RT","ER")
table$TRC<-as.factor(c(rep("100% PC", 9), rep("0% PC", 9)))
table<-table[c(7,1:6)]
colnames(table)<-c("Task-Relevant Context","Condition","PC","RT","ER","RT","ER")
latexTable1<-kable(table,"latex", booktabs = T, row.names = F, align = "c", linesep = '') %>%
kable_styling(full_width = F, font_size= 7) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses.") %>%
kable_styling(latex_options = c("scale_down"))
kable_as_image(kable(table,"latex", booktabs = T, row.names = F, align = "c", linesep = '') %>%
kable_styling(full_width = F, font_size= 7) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses."),filename="table1",file_format ="png", density = 300)
#<-kable(table,"latex", booktabs = T, row.names = F) %>%
#  kable_styling(full_width = T, font_size= 7) %>%
#  add_header_above(c(" "," ",
#                     "Congruent" = 2, "Incongruent" = 2,
#                     "Congruent" = 2, "Incongruent" = 2), bold = T, align="c")  %>%
#  add_header_above(c(" ", " ", "Task-Relevant Context: 100% PC"=4,"Task-Relevant Context: 0% PC" = 4), bold = T, align="c")  %>%
#  row_spec(0, bold = T, align="c") %>%
#  collapse_rows(columns = 1, latex_hline = "major") %>%
#  footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses.") %>%
#  kable_styling(latex_options = c("scale_down"))
kable_as_image(kable(table,"latex", booktabs = T, row.names = F) %>%
kable_styling(full_width = F, font_size= 7) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses."),filename="table1",file_format ="png", density = 300)
kable_as_image(landscape(
kable(table,"latex", booktabs = T, row.names = F) %>%
kable_styling(full_width = F, font_size= 7) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses."
)
),
filename="table1",file_format ="png", density = 300)
kable_as_image(landscape(
kable(table,"latex", booktabs = T, row.names = F) %>%
kable_styling(full_width = F, font_size= 7) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses.") %>%
kable_styling(latex_options = c("scale_down"))
),
filename="table1",file_format ="png", density = 300)
kable_as_image(landscape(
kable(table,"latex", booktabs = T, row.names = F) %>%
kable_styling(full_width = T) %>%
add_header_above(c(" "," "," ", "Congruent" = 2, "Incongruent" = 2), bold = T, align="c") %>%
row_spec(0, bold = T, align="c") %>%
collapse_rows(1:2,latex_hline = 'custom', custom_latex_hline = 1:2) %>%
footnote(general = "RT = Reaction times (ms); ER = Error rates (%); PC = Proportion Congruent; Standard errors are presented in parentheses.") %>%
kable_styling(latex_options = c("scale_down"))
),
filename="table1",file_format ="png", density = 300)
setwd("~/GitHub/task-relevance-cspc")
knitr::include_graphics("data-analysis/table1.png")
knitr::include_graphics("data-analysis/table1.png")
setwd("~/GitHub/task-relevance-cspc")
library("dplyr")
library("afex")
library("papaja")
library("magrittr")
library("kableExtra")
#As of 2018/12/07 apa_print() requires development version of Papaja
#devtools::install_github("crsh/papaja")
library(papaja)
source("data-analysis/analysis.R")
load("data-analysis/raw_data.Rda")
write.csv(raw_data,file="data-analysis/raw_data.csv", col.names=TRUE)
levels(raw_data$Subject)
raw_data$Subject<-as.factor(raw_data$Subject)
levels(raw_data$Subject)
levels(raw_data)<-c(seq(1:length(levels(raw_data$Subject))))
levels(raw_data$Subject)
load("data-analysis/raw_data.Rda")
raw_data$Subject<-as.factor(raw_data$Subject)
seq(1:144)
levels(raw_data$Subject)<-c(seq(1:44))
levels(raw_data$Subject)<-c(seq(1:144))
levels(raw_data$Subject)
save(raw_data,file="raw_data.Rda")
library("redoc", lib.loc="~/R/win-library/3.5")
undoc("redoc_manuscript.docx")
